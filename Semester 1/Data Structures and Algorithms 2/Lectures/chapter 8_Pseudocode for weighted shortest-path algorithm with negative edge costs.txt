//Figure 9.32 Pseudocode for weighted shortest-path algorithm with negative edge costs

void Graph::weightedNegative( Vertex s )
{
	Queue<Vertex> q;

	for each Vertex v
		v.dist = INFINITY;

	s.dist = 0;
	q.enqueue( s );

	while( !q.isEmpty( ) )
	{
		Vertex v = q.dequeue( );
		
		for each Vertex w adjacent to v
			if( v.dist + cvw < w.dist )
			{
				// Update w
				w.dist = v.dist + cvw;
				w.path = v;
				if( w is not already in q )
					q.enqueue( w );
			}
	}
}
